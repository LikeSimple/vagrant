# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|

  # 配置代理
  if Vagrant.has_plugin?("vagrant-proxyconf")

    # host_proxy = "http://192.168.1.101:8818" # Family Proxy Setting
    host_proxy = "http://192.168.51.153:1087/" # Compony Proxy Setting
    config.proxy.http     = host_proxy
    config.proxy.https    = host_proxy
    config.proxy.ftp      = host_proxy
    config.apt_proxy.http = host_proxy
    config.proxy.no_proxy = "localhost,127.0.0.1,.example.com,192.168.0.0/16,172.16.0.0/12,10.0.0.0/8"
  end

  # 配置主机名解析
  if Vagrant.has_plugin?("vagrant-hostmanager")
    config.hostmanager.enabled = true
    config.hostmanager.manage_guest = true
    # 配置宿主机上的虚拟机解析（default: false）
    # config.hostmanager.manage_host = true
    config.hostmanager.include_offline = true
  end

  #相关数据配置，考虑之后放外部属性文件
  num_guests = 1
  vb_cpus  = 2
  vb_memory = "2048"
  bridge_interface = "en7: USB 10/100/1000 LAN" # Macbook Pro Ethernet
  # bridge_interface = "en7: USB 10/100/1000 LAN" # Family Ethernet
  guest_prifix = "ceph"

  (1..num_guests).each do |i|
    
    guest_name = "#{guest_prifix}-#{i}"

    config.vm.define guest_name do |node|
      node.proxy.enabled  = true
      node.vm.box_check_update = false
      node.vm.box = "ubuntu/xenial64"
      node.vm.hostname = guest_name
      # node.vm.network "forwarded_port", guest: 80, host: 8080
      node.vm.network "private_network", ip: "192.168.33.#{100+i}"

      node.vm.network "public_network", bridge: bridge_interface, auto_config: true
      node.vm.synced_folder ".", "/vagrant"

      node.vm.provider "virtualbox" do |vb|
      
        vb.gui = false
        vb.memory = vb_memory
        vb.cpus = vb_cpus
        vb.name = guest_name
      end
      
      
      config.vm.provision "shell", inline: <<-SHELL
        cat /vagrant/aliyun.list > /etc/apt/sources.list
        DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -yq python && apt-get install -yq language-pack-zh-hans
      SHELL
    
      if (i == num_guests) 
        config.vm.provision "ansible" do |ansible|
          ansible.groups= {
            "nodes" => ["#{guest_prifix}-[1:#{num_guests}]"]
          }
          ansible.playbook = "ceph-playbook.yml"
        end 
      end
    end
  end
end