# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|

  # # 配置代理
  # if Vagrant.has_plugin?("vagrant-proxyconf")
  #   config.proxy.enabled  = false
  #   host_proxy = "http://192.168.1.101:8818" # Family Proxy Setting
  ##  host_proxy = "http://172.20.10.2:1087/" # MacBook Pro Proxy Setting
  #   config.proxy.http     = host_ proxy
  #   config.proxy.https    = host_proxy
  #   config.proxy.ftp      = host_proxy
  #   config.apt_proxy.http = host_proxy
  #   config.proxy.no_proxy = "localhost,127.0.0.1,.example.com,192.168.0.0/16,172.16.0.0/12,10.0.0.0/8"
  # end

  # 配置主机名解析
  if Vagrant.has_plugin?("vagrant-hostmanager")
    config.hostmanager.enabled = true
    config.hostmanager.manage_guest = true
    # 配置宿主机上的虚拟机解析（default: false）
    config.hostmanager.manage_host = true
    config.hostmanager.include_offline = true
  end

  #相关数据配置，考虑之后放外部属性文件
  box_name = "jimmy-xu/ubuntu-18.04"
  num_master = 1
  num_node = 3
  vb_cpus  = 1
  vb_memory = "2048"
  # bridge_interface = "en7: USB 10/100/1000 LAN" # Macbook Pro Ethernet
  bridge_interface = "en0: Wi-Fi (AirPort)" # Macbook Pro wifi
  # bridge_interface = "enp4s0f0"
  master_prefix = "k8s-master"
  node_prefix = "k8s-node"

  # 配置虚拟机配置
  (1..num_master).each do |i|
    guest_name = "#{master_prefix}-#{i}"
    config.vm.define guest_name do |node|
      node.vm.box_check_update = false
      node.vm.box = box_name
      node.vm.hostname = guest_name
      # node.vm.network "forwarded_port", guest: 80, host: "#{18080+i}"
      node.vm.network "private_network", ip: "192.168.33.#{10+i}"

      node.vm.network "public_network", bridge: bridge_interface, auto_config: true
      node.vm.synced_folder ".", "/vagrant"

      node.vm.provider "virtualbox" do |vb|
        vb.gui = false
        vb.memory = vb_memory
        vb.cpus = vb_cpus
        vb.name = guest_name
      end
      
      # config.vm.provision "shell", inline: <<-SHELL
      #   cp /etc/apt/sources.list ~/sources.list.back && cat /vagrant/aliyun.list > /etc/apt/sources.list
      #   DEBIAN_FRONTEND=noninteractive apt-get update && apt-get -yq upgrade && apt-get install -yq language-pack-zh-hans
      # SHELL
    
      # if (i == num_guests)
      #   config.vm.provision "ansible" do |ansible|
      #     ansible.groups= {
      #       "nodes" => ["#{guest_prifix}-[1:#{num_guests}]"],
      #       "nodes:vars" => {"ansible_python_interpreter" => "/usr/bin/python3"}
      #     }
          
      #     ansible.playbook = "k8s-playbook.yml"
      #   end 
      # end
    end
  end

  (1..num_node).each do |i|

    guest_name = "#{node_prefix}-#{i}"

    config.vm.define guest_name do |node|
      node.vm.box_check_update = false
      node.vm.box = box_name
      node.vm.hostname = guest_name
      # node.vm.network "forwarded_port", guest: 80, host: "#{18080+i}"
      node.vm.network "private_network", ip: "192.168.33.#{30+i}"

      node.vm.network "public_network", bridge: bridge_interface, auto_config: true
      node.vm.synced_folder ".", "/vagrant"

      node.vm.provider "virtualbox" do |vb|
        vb.gui = false
        vb.memory = vb_memory
        vb.cpus = vb_cpus
        vb.name = guest_name
      end

      # if ( i ==  num_node )
      #   config.vm.provision "ansible" do |ansible|
      #     ansible.groups= {
      #       "clients"      => ["#{master_prefix}-[1:#{num_master}]", "#{node_prefix}-[1:#{num_node}]"],
      #       "masters"      => ["#{master_prefix}-[1:#{num_master}]"],
      #       "nodes"        => ["#{node_prefix}-[1:#{num_node}]"],
      #       "clients:vars" => {"ansible_python_interpreter" => "/usr/bin/python3"},
      #       "masters:vars" => {"ansible_python_interpreter" => "/usr/bin/python3"},
      #       "nodes:vars"   => {"ansible_python_interpreter" => "/usr/bin/python3"}
      #     }

      #     ansible.playbook = "k8s-playbook.yml"
      #   end
      # end
    end
  end
end